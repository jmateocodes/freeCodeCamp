// This is an inline comment.
/*
This is a multi-line comment
*/

/*
JS has 7 types of data types: undefined, null, boolean, string, symbol, number, and object

JS declares variables by putting "var" before it.
    var ourName;

Use \ to escape characters. For instance if you need to put quotes inside of a string.\r is for carriage return, \f is for form feed

Single and double quotes are identical in javascript.

In js, once you declare a string, you cannot change their characters. String are "immutable".
    var myStr = "Bob";
    myStr[0] = "J";
    ^THIS CANNOT BE DONE. You have to assign myStr a new string.

Arrays don't have to be explicitly declared, and can contain multiple types.
    var myArray = ["Jump", 1];

Multi-dimensional array:
    var [["first", "array", ["second", "array"]];

Arrays are mutable, you can change them freely after declaring them.

.push() pushes an item to the end of an array
.pop() is to remove a value from the end of an array

.push([...]) pushes an array into the end of an array

.unshift() adds an element to the front of an array
.shift() removes the first value from the array

Function syntax:
function funtionName() {
    console.log("Hellow World");
    }

Variables defined outside of a function have global scope.
Variables that are created without the var keyword are automatically in the global scope. NEVER DEFINE VARIABLE WITHOUT VAR KEYWORD

Local variables are declared inside a function & take precedence over global variables

A queue is a data structure where items are kept in order. New items can be added to the back of the queue and old items can be removed from the front of the queue.

In JS, == tests the value. It converts data types to the same type and then compares
"1" == 1 //true
4 == '4' //true

=== is strict equality. It compares the data type and value.
"1" === 1 //false
4 === '4' //false

!= is inequality, and !== is strict inequality

*/
